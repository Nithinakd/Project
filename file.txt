1) Method to add 2 nos which have return type as void and call it in Program
from Sulakshana Deore (Trainer) to All Attendees:
1) Method to add 2 nos which have return type as void and call it in Program
2) Method to add 2 nos which have return type as int and call it in Program
3) Create a struct of employee with empno,ename,sal,deptno.
Create properties for the above 
4) Create a struct of employee with empno,ename,sal,deptno as fields
and write methods to Accept and Display Data
5) Create a struct of employee with empno,ename,sal,deptno and create a array of 4 employees.
write methods to Accept and Display Data
from Sulakshana Deore (Trainer) to All Attendees:
6) create a enum of deptnames as Purchase=1,Sales=2,Training=3 and Accounts=4.
Accept deptname as string and display deptnos.
7) Write a program to handle Divide By Zero exception and call the stack trace to get the line number
8)  Write a method to handle Divide By Zero exception and call the stack trace to get the line number by calling method in the main
9) Write a program to accept employee data using the above structure.
In the properties, write a validation to check empno and deptno not equal to zero.
Also write validation for empname should not be null or empty
-----------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Practice
{
    class Program
    {
        static void DivideNumbers(int i, int j)
        {
            try//inner try
            {
                Console.WriteLine("Came to Divide Numbers method....");
                int k = i / j;
                Console.WriteLine(k);
            }
            catch (DivideByZeroException ex)
            {
                Console.WriteLine("Stack Trace=" + ex.StackTrace);
                Console.WriteLine("------");
                ex.Source = "Exception Handling Demo";
                Console.WriteLine("Source=  " + ex.Source);
                Console.WriteLine("-------");
                Console.WriteLine("Message" + ex.Message);
            }
            catch (FormatException ex)
            {

                Console.WriteLine("Format exception by inner try");
            }
            finally
            {

                Console.WriteLine("Inner finally also fired... ");
            }



        }


        static void Main(string[] args)
        {
            int i, j;
            try//outer try
            {
                Console.WriteLine("enter value for i");
                i = Convert.ToInt32(Console.ReadLine());
                Console.WriteLine("Enter value for j");
                j = Convert.ToInt32(Console.ReadLine());
                DivideNumbers(i, j);
            }

            catch (DivideByZeroException ex)
            {
                Console.WriteLine("IT comes here from inner try for specific");
                Console.WriteLine(ex.Message);
            }
            finally
            {
                Console.WriteLine("Finally fired....");

            }

            Console.Read();
        }
 
   }
}
-----------------------------------
5) convert string into uppercase in C#
6) create a blank file name it as firstFile.txt
7) display the Day properties (year, month, day, hour, minute, second, millisecond etc.) of todays date